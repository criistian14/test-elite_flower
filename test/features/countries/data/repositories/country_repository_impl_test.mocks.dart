// Mocks generated by Mockito 5.0.13 from annotations
// in testeliteflower/test/features/countries/data/repositories/country_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:testeliteflower/src/core/utils/network_info.dart' as _i3;
import 'package:testeliteflower/src/features/countries/data/datasources/local/country_local_data_source.dart'
    as _i6;
import 'package:testeliteflower/src/features/countries/data/datasources/remote/country_remote_data_source.dart'
    as _i5;
import 'package:testeliteflower/src/features/countries/data/models/country_model.dart'
    as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeCountryModel extends _i1.Fake implements _i2.CountryModel {}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i3.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [CountryRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockCountryRemoteDataSource extends _i1.Mock
    implements _i5.CountryRemoteDataSource {
  MockCountryRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.CountryModel> getCountry(String? code) =>
      (super.noSuchMethod(Invocation.method(#getCountry, [code]),
              returnValue: Future<_i2.CountryModel>.value(_FakeCountryModel()))
          as _i4.Future<_i2.CountryModel>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [CountryLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockCountryLocalDataSource extends _i1.Mock
    implements _i6.CountryLocalDataSource {
  MockCountryLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.CountryModel?> getCountry(String? code) =>
      (super.noSuchMethod(Invocation.method(#getCountry, [code]),
              returnValue: Future<_i2.CountryModel?>.value())
          as _i4.Future<_i2.CountryModel?>);
  @override
  _i4.Future<void> saveCountry(_i2.CountryModel? country) =>
      (super.noSuchMethod(Invocation.method(#saveCountry, [country]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  String toString() => super.toString();
}
